@using Mundial.Entidades
@using Mundial.Web.Auth
@using Mundial.Web.Services
@using System.Security.Claims
@inject NavigationManager Navegador;
@inject ILoginService loginSerivice;
@inject IUsuarioService usuarioService;
@inject IPersonaService personaService;
@inject ISessionStorageService sessionStorage;

<div class="top-row px-4  d-flex align-items-center">
	<div class="container-fluid  d-flex justify-content-center">
		<img src="./images/toledoMundial2022.png" />
		<button title="Navigation menu" class="navbar-toggler" @onclick="ToggleNavMenu">
			<span class="navbar-toggler-icon"> <i class="fa-solid fa-bars text-blue"></i></span>
		</button>
	</div>
</div>

<div class="@NavMenuCssClass" @onclick="ToggleNavMenu">
	<nav class="flex-column">
		<div class="nav-item px-3 mb-2 mt-2">
			<div>
				<div class="row d-flex align-items-center">
					<div class="col-3">
						@if (@perfilItem.Imagen == null)
						{
							<MudAvatar Image="/images/perfil-usuario.png" />
						}else
						{
							<MudBadge Color="Color.Success"Overlap="true" Bordered="true">
								<MudAvatar Image="@($"data:image/*;base64, {Convert.ToBase64String(perfilItem.Imagen)}")" />
							</MudBadge>
						}
					</div>
					<div class="col-9">
						<MudText Align="Align.Center" Typo="Typo.button" Style="color:white; font-size: 15px">@Nickname</MudText>
					</div>
				</div>
			</div>
		</div>
		<div class="nav-item px-3">
			<NavLink class="nav-link" href="Index" Match="NavLinkMatch.All">
				<span class="oi oi-home" aria-hidden="true"></span> Inicio
			</NavLink>
		</div>
		<div class="nav-item px-3">
			<NavLink class="nav-link " href="Equipos">
				<span aria-hidden="true"><i class="fa-solid fa-people-group mr-2"></i> Ver Equipos</span> 
			</NavLink>
		</div>
		<div class="nav-item px-3">
			<NavLink class="nav-link" href="Estadios">
				<span aria-hidden="true"><i class="fa-solid fa-tent mr-2"></i> Ver Estadios</span>
			</NavLink>
		</div>
		<div class="nav-item px-3">
			<NavLink class="nav-link" href="Jugadores">
				<span aria-hidden="true"><i class="fa-solid fa-futbol mr-2"></i> Ver Jugadores</span>
			</NavLink>
		</div>
		<div class="nav-item px-3">
			<NavLink class="nav-link" href="Preguntas">
				<span aria-hidden="true"><i class="fa-solid fa-list-ol mr-2"></i> Responder Preguntas</span>
			</NavLink>
		</div>
		 <div class="nav-item px-3">
			<NavLink class="nav-link" href="Formaciones">
				<span aria-hidden="true"><i class="fa-solid fa-clipboard-list mr-2"></i> Arma tu formacion</span>
			</NavLink>
		</div>
		<div class="nav-item px-3">
			<NavLink class="nav-link" href="Prode">
				<span aria-hidden="true"><i class="fa-solid fa-sitemap mr-2"></i> Completa el Prode</span>
			</NavLink>
		</div>
		<div class="nav-item px-3" >
			<NavLink class="nav-link" href="Ranking">
				<span aria-hidden="true"><i class="fa-solid fa-ranking-star mr-2"></i> Ranking</span>
			</NavLink>
		</div>
		<div class="nav-item px-3">
			<NavLink class="nav-link" href="Perfil" @onclick="@(()=>NavegatorToPerfil())">
				<span aria-hidden="true"><i class="fa-solid fa-user mr-2"></i> Mi Perfil</span>
			</NavLink>
		</div>
		<div class="nav-item px-3">
			<NavLink class="nav-link" href="Logout">
				<span aria-hidden="true"><i class="fa-solid fa-arrow-right-from-bracket mr-2"></i> Cerrar Sesion</span>
			</NavLink>
		</div>
		<div class="nav-item px-3 mb-6" >
			<NavLink>
			</NavLink>
		</div>
		<div class="nav-item px-3">
			
		</div>
	</nav>
</div>

@code {
	private bool collapseNavMenu = true;
	private int IdUsuario = 0;
	private string Nickname = string.Empty;
	private string? NavMenuCssClass => collapseNavMenu ? "collapse" : null;
	Usuario usuarioLogueado;
	PerfilItem perfilItem = new PerfilItem();
	private void ToggleNavMenu()
	{
		collapseNavMenu = !collapseNavMenu;
	}

	protected async override Task OnInitializedAsync()
	{
		usuarioLogueado = new Usuario();
		IdUsuario = Convert.ToInt32(await sessionStorage.GetItemAsync<string>("ID"));
		perfilItem= await personaService.GetById(Convert.ToInt32(await sessionStorage.GetItemAsync<string>("IdPersona")));
		Nickname = await sessionStorage.GetItemAsync<string>("Nickname");
	}

	private async Task LogOut()
	{
		await loginSerivice.LogOut();
		Navegador.NavigateTo("/");
	}

	private Task NavegatorToPerfil()
	{
		Navegador.NavigateTo($"/Perfil/{IdUsuario}", true);
		return Task.CompletedTask;
	}

}
